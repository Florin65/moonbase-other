default_pre_build &&

unzip $SOURCE_CACHE/$SOURCE2 &&

# Allow building against system libraries in official builds
sedit 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' tools/generate_shim_headers/generate_shim_headers.py &&

# Enable support for the Widevine CDM plugin
patch_it $SOURCE3 1 &&

# https://crbug.com/822820
patch_it $SOURCE4 1 &&

# https://crbug.com/817400
patch_it $SOURCE5 1 &&

# https://crbug.com/821881
patch_it $SOURCE6 1 &&

# https://crbug.com/skia/6663#c10
patch_it $SOURCE7 4 &&

# https://crbug.com/797708
patch_it $SOURCE8 1 &&

# Fixes from Gentoo
patch_it $SOURCE9 1 &&
patch_it $SOURCE10 1 &&
patch_it $SOURCE11 1 &&

# Build now requires nodejs
mkdir -p third_party/node/linux/node-linux-x64/bin &&
ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/node &&

export CHROMIUM_HOME=/usr/lib/$MODULE &&

mkdir python2-path &&
PYTHON_VER=`module_version Python | cut -c 1-3` &&
ln -s /usr/bin/python2 python2-path/python &&

sedit "s:/bin/echo:/usr/bin/echo:g" build/common.gypi &&

# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
# The keys below are for Lunar Linux use ONLY. If you are maintaining chromium for
# another distribution, please get your own set of keys.
google_api_key=AIzaSyDhObDIVsBGV5fleLgLq6ZpfKldIVMvrG4 &&
google_default_client_id=1081365520390-t7vsmo6kde87fvbjoue2ea412vsjkvu0.apps.googleusercontent.com &&
google_default_client_secret=mz6fvViZFucQ5QVggWaqOjYX &&

# Remove bundled libraries, we will use system provided ones instead (using arch's approach)
libs=(flac yasm libxslt libwebp libjpeg opus re2 zlib icu snappy freetype)
for lib in ${libs[@]} libjpeg_turbo; do
  find -type f -path "*third_party/${lib}/*" \
       \! -path "*third_party/${lib}/chromium/*" \
       \! -path "*third_party/${lib}/google/*" \
       \! -path "./base/third_party/icu/*" \
       \! -path './third_party/pdfium/third_party/freetype/include/pstables.h' \
       \! -path './third_party/yasm/run_yasm.py' \
       \! -regex '.*\.\(gn\|gni\|isolate\)' \
       -delete
done &&

python2 build/linux/unbundle/replace_gn_files.py --system-libraries "${libs[@]}" &&
python2 third_party/libaddressinput/chromium/tools/update-strings.py &&

local _flags=(
  'custom_toolchain="//build/toolchain/linux/unbundle:default"'
  'host_toolchain="//build/toolchain/linux/unbundle:default"'
  'is_clang=true'
  'clang_use_chrome_plugins=false'
  'is_debug=false'
  'fatal_linker_warnings=false'
  'treat_warnings_as_errors=false'
  'fieldtrial_testing_like_official_build=true'
  'remove_webcore_debug_symbols=true'
  'ffmpeg_branding="Chrome"'
  'proprietary_codecs=true'
  'use_gold=false'
  'use_lld=false'
  'use_sysroot=false'
  'use_custom_libcxx=false'
  'linux_use_bundled_binutils=false'
  'enable_hangout_services_extension=true'
  'enable_widevine=true'
  'enable_nacl=false'
  'enable_swiftshader=false'
  "google_api_key=\"${google_api_key}\""
  "google_default_client_id=\"${google_default_client_id}\""
  "google_default_client_secret=\"${google_default_client_secret}\""
) &&

for o in $OPTS; do
  _flags+=( "$o" )
done &&

export CC=clang &&
export CXX=clang++ &&
export AR=ar &&
export NM=nm &&

# Facilitate deterministic builds (taken from build/config/compiler/BUILD.gn)
export CFLAGS+='   -Wno-builtin-macro-redefined'
export CXXFLAGS+=' -Wno-builtin-macro-redefined'
export CPPFLAGS+=' -D__DATE__=  -D__TIME__=  -D__TIMESTAMP__='

python2 tools/gn/bootstrap/bootstrap.py -s --no-clean &&
out/Release/gn gen out/Release --args="${_flags[*]}" --script-executable=/usr/bin/python2
